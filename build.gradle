/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'sergio' at '1/22/14 9:53 PM' with Gradle 1.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.10/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.1.3'	
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'fatjar'

mainClassName = 'bo.com.ab.example.helloworld.HelloWorldApplication'
version = 0.1

fatJar {
    classifier 'fat'

    manifest {
        attributes 'Main-Class': mainClassName, "Implementation-Title": "Dropwizard Application", "Implementation-Version": version
    }

    // We have to exclude signature files from the fat JAR, otherwise we'll get invalid signature file digest errors.
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
}

artifacts {
     archives file("build/libs/dropwizard-fat.jar")
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    
    maven {
       url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile(group: 'io.dropwizard', name: 'dropwizard-core', version: '0.7.0')

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}

run {
    args 'server', 'hello-world.yml'
}
